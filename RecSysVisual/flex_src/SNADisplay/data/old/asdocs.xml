<?xml version="1.0" encoding="UTF-8"?>
<Graph>
	<Node id="vizgraph" name="Visual Graph" nodeType="SixDegrees" description="Flex Visual Graph Library"   />
	<Node id="graphlayout_data" name="org.un.flex.graphLayout.data" nodeType="PrimitiveStar" description="Package for data classes"   />
	<Node id="idataitem" name="IDataItem" nodeType="PrimitiveCircle" description=""   />
	<Node id="data" name="Data" nodeType="PrimitiveReverseBurst" description="Object: Access to the data object associated with any item." />
	<Node id="id" name="Id" nodeType="PrimitiveReverseBurst" description="Int: [read-only] Access to the id property of any item." />	
	<Node id="iedge" name="IEdge" nodeType="PrimitiveCircle" description=""   />
	<Node id="fromnode" name="fromNode" nodeType="PrimitiveReverseBurst" description="INode:[read-only] returns the source node (fromNode) of the edge." />
    <Node id="isdirectional" name="isDirectional" nodeType="PrimitiveReverseBurst" description="Boolean: [read-only] Indicates if the graph that contains this edge is directional." />
    <Node id="node1" name="node1" nodeType="PrimitiveReverseBurst" description="INode: [read-only] The first node associated with this edge." />
    <Node id="node2" name="node2" nodeType="PrimitiveReverseBurst" description="INode: [read-only] The second node associated with this edge." /> 
    <Node id="tonode" name="toNode" nodeType="PrimitiveReverseBurst" description="INode: [read-only] returns the target node (toNode) of the edge." /> 
    <Node id="vedge" name="vedge" nodeType="PrimitiveReverseBurst" description="IVisualEdge: Access to the associated VisualEdge of this Edge." />
	<Node id="othernode" name="othernode" nodeType="PrimitiveTriangle" description="(node:INode):INode - This method returns the other node than the node given as parameter, so it can be used to follow along the edge." />
	<Node id="igraph" name="IGraph" nodeType="PrimitiveCircle" description=""   />
	<Node id="igtree" name="IGTree" nodeType="PrimitiveCircle" description=""   />
	<Node id="edge" name="Edge" nodeType="PrimitiveSquare" description=""   />
	<Node id="graph" name="Graph" nodeType="PrimitiveSquare" description=""   />
	<Node id="gtree" name="GTree" nodeType="PrimitiveSquare" description=""   />
	<Node id="node" name="Node" nodeType="PrimitiveSquare" description=""   />
	<Node id="graphlayout_layout" name="org.un.flex.graphLayout.layout" nodeType="PrimitiveStar" description="Package for layout methods"   />
	<Node id="iedgerenderer" name="IEdgeRenderer" nodeType="PrimitiveCircle" description=""   />
	<Node id="ilayoutalgorithm" name="ILayoutAlgorithm" nodeType="PrimitiveCircle" description=""   />
	<Node id="baselayoutdrawing" name="BaseLayoutDrawing" nodeType="PrimitiveSquare" description="This is a base class to hold layout drawing information like target coordinates for all nodes, access to polar and cartesian versions of those coordinates and an origin offset." /> 
  	<Node id="baselayouter" name="BaseLayouter" nodeType="PrimitiveSquare" description="This is an base class to various layout implementations it does not really do any layouting but implements everything required by the PrimitiveCircle." />
  	<Node id="concentricradiallayoutdrawing" name="ConcentricRadialLayoutDrawing" nodeType="PrimitiveSquare" description="This class holds all the parameters needed for a drawing representation of a graph drawing with a Concentric Radial Layout and corresponding access methods It actually represents a calculated layout." />
  	<Node id="concentricradiallayouter" name="ConcentricRadialLayouter" nodeType="PrimitiveSquare" description="This is an implementation of the generic radial layout algorithm that uses concentric rings for the distance." /> 
  	<Node id="defaultedgerenderer" name="DefaultEdgeRenderer" nodeType="PrimitiveSquare" description="This is the default edge renderer, which draws the edges as straight lines from one node to another." /> 
  	<Node id="parentcentereddrawingmodel" name="ParentCenteredDrawingModel" nodeType="PrimitiveSquare" description="This class holds all the parameters needed for a drawing representation of a graph drawing with a Parent-Centered Radial Layout i.e." /> 
  	<Node id="parentcenteredradiallayouter" name="ParentCenteredRadialLayouter" nodeType="PrimitiveSquare" description="This is an implementation of the parent centered radial layouter as described in the 2006 paper by Andy Pavlo, Christopher Homan and Jon Schull." /> 
  	<Node id="phyllotreedrawingmodel" name="PhylloTreeDrawingModel" nodeType="PrimitiveSquare" description="This class holds all the parameters needed for a drawing representation of a graph drawing with a Parent-Centered Radial Layout i.e." /> 
  	<Node id="phyllotreelayouter" name="PhylloTreeLayouter" nodeType="PrimitiveSquare" description="This is an implementation of the parent centered radial layouter as described in the 2006 paper by Andy Pavlo, Christopher Homan and Jon Schull." /> 
  	<Node id="springforcedirectedlayouter" name="SpringForceDirectedLayouter" nodeType="PrimitiveSquare" description="This is an implementation of the ForceDirected/SpringGraph Layouting algorithm." /> 	
	<Node id="graphlayout_visual" name="org.un.flex.graphLayout.visual" nodeType="PrimitiveStar" description=""   />
	<Node id="ivisualedge" name="IVisualEdge" nodeType="PrimitiveCircle" description="Interface for a visual edge." />
	<Node id="ivisualgraph" name="IVisualGraph" nodeType="PrimitiveCircle" description="Interface to the VisualGraph Flex Component, which also has to implement the IUIComponent and the IInvalidating PrimitiveCircle." />
	<Node id="ivisualitem" name="IVisualItem" nodeType="PrimitiveCircle" description="Interface for any visual item, provides access to an internal id, a data object and a related VisualGraph." />
	<Node id="ivisualnode" name="IVisualNode" nodeType="PrimitiveCircle" description="The visual node interface, this includes lots of access methods for location properties, movement properties." />
  	<Node id="visualedge" name="VisualEdge" nodeType="PrimitiveSquare" description="A visual edge is just a representation of a graph edge in the VisualGraph context." />
	<Node id="visualgraph"  name="VisualGraph" nodeType="PrimitiveSquare" description="This component can visualize and layout a graph data structure in a Flex application." /> 
	<Node id="visualnode"  name="VisualNode" nodeType="PrimitiveSquare" description="The VisualNode to be used in the Graph." /> 
	<Node id="flex_utils" name="org.un.flex.utils" nodeType="PrimitiveStar" description=""   />
	<Node id="geometry" name="Geometry" nodeType="PrimitiveSquare" description="This is a PrimitiveSquare to provide some static functions to help with angles and geometry." />
	<Node id="cartFromPolar" name="cartFromPolar" nodeType="PrimitiveReverseBurst" description="Calculate cartesian coordinates from polar coordinates, again this uses the polar method from the Point class, here for completeness." /> 
    <Node id="normaliseAngle" name="normaliseAngle" nodeType="PrimitiveReverseBurst" description="Normalizes angles to be within the range of 0 to 2I by adding or subtracting 2 PI until the angle is within the range." />
    <Node id="polarAngle" name="polarAngle" nodeType="PrimitiveReverseBurst" description="Calculate the polar Angle of a Point." />
    <Node id="polarRadius" name="polarRadius" nodeType="PrimitiveReverseBurst" description="Calculate the polar radius for a given point." />
	<Edge fromID="vizgraph" toID="graphlayout_data" color="0xff6666" />
	<Edge fromID="vizgraph" toID="graphlayout_layout" color="0xff6666" />
	<Edge fromID="vizgraph" toID="graphlayout_visual" color="0xff6666" />
	<Edge fromID="vizgraph" toID="flex_utils" color="0xff6666" />
	<Edge fromID="graphlayout_data" toID="idataitem" color="0xff6666" />
	<Edge fromID="idataitem" toID="data" color="0xff6666" />
	<Edge fromID="idataitem" toID="id" color="0xff6666" />
	<Edge fromID="graphlayout_data" toID="iedge" color="0x666666" />
	<Edge fromID="iedge" toID="fromnode" color="0x666666" />
	<Edge fromID="iedge" toID="isdirectional" color="0x666666" />
	<Edge fromID="iedge" toID="node1" color="0x666666" />
	<Edge fromID="iedge" toID="node2" color="0x666666" />
	<Edge fromID="iedge" toID="tonode" color="0x666666" />
	<Edge fromID="iedge" toID="vedge" color="0x666666" />
	<Edge fromID="iedge" toID="othernode" color="0x666666" />
	<Edge fromID="graphlayout_data" toID="igraph" color="0x666666" />
	<Edge fromID="graphlayout_data" toID="igtree" color="0x666666" />
	<Edge fromID="graphlayout_data" toID="edge" color="0x666666" />
	<Edge fromID="graphlayout_data" toID="graph" color="0x666666" />
	<Edge fromID="graphlayout_data" toID="gtree" color="0x666666" />
	<Edge fromID="graphlayout_data" toID="node" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="iedgerenderer" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="ilayoutalgorithm" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="baselayoutdrawing" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="baselayouter" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="concentricradiallayoutdrawing" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="concentricradiallayouter" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="defaultedgerenderer" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="parentcentereddrawingmodel" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="parentcenteredradiallayouter" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="phyllotreedrawingmodel" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="phyllotreelayouter" color="0x666666" />
	<Edge fromID="graphlayout_layout" toID="springforcedirectedlayouter" color="0x666666" />	
	<Edge fromID="graphlayout_visual" toID="ivisualedge" color="0x666666" />
	<Edge fromID="graphlayout_visual" toID="ivisualgraph" color="0x666666" />
	<Edge fromID="graphlayout_visual" toID="ivisualitem" color="0x666666" />
	<Edge fromID="graphlayout_visual" toID="ivisualnode" color="0x666666" />
	<Edge fromID="graphlayout_visual" toID="visualedge" color="0x666666" />
	<Edge fromID="graphlayout_visual" toID="visualgraph" color="0x666666" />
	<Edge fromID="graphlayout_visual" toID="visualnode" color="0x666666" />
	<Edge fromID="flex_utils" toID="geometry" color="0x666666" />
	<Edge fromID="geometry" toID="cartFromPolar" color="0x666666" />
	<Edge fromID="geometry" toID="normaliseAngle" color="0x666666" />
	<Edge fromID="geometry" toID="polarAngle" color="0x666666" />
	<Edge fromID="geometry" toID="polarRadius" color="0x666666" />


</Graph>