<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="800" height="500" 
	showCloseButton="true" close="closeHandle()" creationPolicy="all">
	<mx:Script>
		<![CDATA[
		import mx.controls.Button;
		import mx.charts.BubbleChart;
		import mx.controls.Label;
		import mx.collections.ArrayCollection;
		import mx.managers.PopUpManager;
		import SNADisplay.org.utils.Colour;
		import SNADisplay.component.DataGridWindow;
        import mx.core.UIComponent;
        
        [Bindable]
        private var nameTitle:String;
        [Bindable]
        private var valueTitle:String;
        import mx.controls.Alert;
        
        private var _compDraw:UIComponent;	//绘制节点
        private var _xmlData:XML;
        private var levelPropArr:Array = new Array;
        private var levelLabelArr:Array = new Array;
        private var runOffBtnArr:Array = new Array;
        private var pageNameLabelArr:Array = new Array;
        private const LEVEL_SCALE:Number = 0.75;
        public function init(xmlData:XML = null):void {
        	var levelLabel:Label;
        	var runOffBtn:Button;
        	var pageLabel:Label;
			var btnIndex:int = 0;
			_xmlData = xmlData;
    		for each ( var levelXML:XML  in  xmlData.child("Level")  ){
    			var proportion:Number = new Number(levelXML.attribute("proportion"));
    			var num:Number = new Number(levelXML.attribute("num"));
    			levelPropArr.push(proportion);
    			
    			levelLabel = new Label;
	        	levelLabel.setStyle("fontSize",12);
	   			levelLabel.text = (proportion*100) + "% (" + num + ")";	   			
	   			levelLabelArr.push(levelLabel);
	   			this.addChild(levelLabel);
	   			
	   			runOffBtn = new Button;
	   			runOffBtn.id = btnIndex.toString();
	   			runOffBtn.label = "流失查看";
	   			runOffBtn.addEventListener(MouseEvent.CLICK, showRunOffTable);
	   			runOffBtnArr.push(runOffBtn);
	   			this.addChild(runOffBtn);
	   			
	   			pageLabel = new Label;
	   			pageLabel.setStyle("fontSize",12);
	   			pageLabel.text = levelXML.attribute("name");
	   			pageNameLabelArr.push(pageLabel);
	   			this.addChild(pageLabel);
	   			
	   			btnIndex++;
    		}
      
        	this.validateNow();
        }
   		
   		private function showRunOffTable(evt:MouseEvent):void {
   			var btnId:String = (Button)(evt.target).id;
   			var dataGridWindow:DataGridWindow = new DataGridWindow;
   			var levelXMLList:XMLList = _xmlData.descendants("Level");
   			var runOffXML:XML;
   			runOffXML = levelXMLList[new Number(btnId)];
   			if ( runOffXML != null ){
   				PopUpManager.addPopUp(dataGridWindow,this,false);
				PopUpManager.centerPopUp(dataGridWindow);
				dataGridWindow.init(runOffXML);
   			}
   			
   		}
   		public function draw():void{
   			var per:Number;
   			var startX:int = canvas.x + canvas.width*0.2;
   			var startY:int = canvas.y + 20;
   			var width:int = canvas.width*0.6;
   			var height:int = canvas.height - 40;
   			var levelLabel:Label;
   			var pageNameLabel:Label;
   			var runOffBtn:Button;
   			for (var i:int = 0 ; i < levelPropArr.length ; i++ ){
   				per = levelPropArr[i];
   				drawLevel(per, i, levelPropArr.length, startX, startY, width, height);
   				//页面名称标签
   				pageNameLabel = pageNameLabelArr[i];
   				pageNameLabel.x = canvas.x + 40;
   				pageNameLabel.y = startY + height / levelPropArr.length * ( i + 0.5 ) - pageNameLabel.height;
   				//百分比标签
   				levelLabel = levelLabelArr[i];
	   			levelLabel.x = startX + width/2 - levelLabel.width/2;
	   			levelLabel.y = startY + height / levelPropArr.length * ( i + 0.5 ) - levelLabel.height;
	   			//用户流失按钮
	   			runOffBtn = runOffBtnArr[i];
	   			runOffBtn.x = canvas.width*0.8 + 5;
	   			runOffBtn.y = startY + height / levelPropArr.length * ( i + 0.5 ) - runOffBtn.height;
   			}
   			
   		}
   		
   		private function drawLevel(per:Number, levNum:int, totalNum:int, startX:int, startY:int, width:int, height:int):void {
   			var x:int;
   			var y:int;
   			var h:int = height/totalNum;
   			var w:int;
   			if ( per > 0.1 ) {
   				w = width*per;
	   			x = startX + width*(1 - per)/2;
	   			y = startY + h*levNum;
	   			drawComp.graphics.lineStyle(2,Colour.GRAY,1);
	   			drawComp.graphics.beginFill(Colour.LIGHT_BLUE,0.5);
	   			drawComp.graphics.moveTo(x,y);
	   			drawComp.graphics.lineTo(x+w*0.15,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w*0.85,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y);
	   			drawComp.graphics.lineTo(x,y);
	   			drawComp.graphics.endFill();
   			}
   			else if ( per > 0.03 ){
   				w = width*per;
	   			x = startX + width*(1 - per)/2;
	   			y = startY + h*levNum;
	   			drawComp.graphics.lineStyle(2,Colour.GRAY,1);
	   			drawComp.graphics.beginFill(Colour.LIGHT_BLUE,0.5);
	   			drawComp.graphics.moveTo(x,y);
	   			drawComp.graphics.lineTo(x,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y);
	   			drawComp.graphics.lineTo(x,y);
	   			drawComp.graphics.endFill();
   			}
   			else {
   				per = 0.03;
   				w = width*per;
	   			x = startX + width*(1 - per)/2;
	   			y = startY + h*levNum;
	   			drawComp.graphics.lineStyle(2,Colour.GRAY,1);
	   			drawComp.graphics.beginFill(Colour.LIGHT_BLUE,0.5);
	   			drawComp.graphics.moveTo(x,y);
	   			drawComp.graphics.lineTo(x,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y);
	   			drawComp.graphics.lineTo(x,y);
	   			drawComp.graphics.endFill();
   			}
   		}
   		
   		private function closeHandle():void {
   			PopUpManager.removePopUp(this);
   		}
		]]>
	</mx:Script>
	<mx:Canvas id="canvas" width="100%" height="100%">
		<mx:UIComponent id="drawComp" />
	</mx:Canvas>
</mx:TitleWindow>
