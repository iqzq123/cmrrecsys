<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="800" height="500"
	 showCloseButton="true" close="closeHandle()" creationPolicy="all">
	 <mx:Script>
	 	<![CDATA[
	 		import mx.rpc.events.FaultEvent;
	 		import mx.rpc.events.ResultEvent;
	 	import mx.controls.Button;
		import mx.charts.BubbleChart;
		import mx.controls.Label;
		import mx.collections.ArrayCollection;
		import mx.managers.PopUpManager;
		import SNADisplay.org.utils.Colour;
		import SNADisplay.component.DataGridWindow;
        import mx.core.UIComponent;
        import mx.controls.Alert;
        import mx.rpc.http.mxml.HTTPService;
        
       	private var chaptNameLabelAttr:Array = new Array;  //章节名标签
		private var chaptPropLabelAttr:Array = new Array;  //章节阅读量的比例标签
		private var chaptPropAttr:Array = new Array;  //比例的值
		private var runOffRatioAttr:Array = new Array;  //流失率标签
		private var chaptFeeAttr:Array = new Array;  //该章节是否收费
		private var chaptUserNumAttr:Array = new Array;  //各章节的读者人数
			
		private const LEVEL_SCALE:Number = 0.75;
		private var xmlData:XML;
		private var buttonID:String;
		private var tundishPath:String;
		private var packagePath:String;
		private var n:String;
		private var bookID:String;
			
			
		public function drawTundish(bookXML:XML):void {
				var chaptNameLabel:Label;
				var chaptPropLabel:Label;
				var runOffRatioLabel:Label;
				
				xmlData = bookXML;
				for each(var chaptXML:XML in bookXML.child("chaptEmt") ) {
					var chaptName:String = new String(chaptXML.attribute("chaptName"));
					var userNum:Number = new Number(chaptXML.attribute("userNum"));
					var runOffRatio:Number = new Number(chaptXML.attribute("runOffRatio"));
					var propotion:Number = new Number(chaptXML.attribute("propotion"));
					var chaptFee:Number = new Number(chaptXML.attribute("chapterFee"));
					
					chaptNameLabel = new Label;
					chaptNameLabel.setStyle("fontSize",12);
					chaptNameLabel.text = chaptName;
					chaptNameLabelAttr.push(chaptNameLabel);
					canvas.addChild(chaptNameLabel);
					
					chaptPropLabel = new Label;
					chaptPropLabel.setStyle("fontSize",12);
					chaptPropLabel.text = (propotion*100) + "% (" + userNum + ")";
					chaptPropLabelAttr.push(chaptPropLabel);
					canvas.addChild(chaptPropLabel);

					
					runOffRatioLabel = new Label;
					runOffRatioLabel.setStyle("fontSize",12);
					runOffRatioLabel.text = "流失率"+(runOffRatio*100) + "%";
					runOffRatioAttr.push(runOffRatioLabel);
					canvas.addChild(runOffRatioLabel);
										
					chaptPropAttr.push(propotion);
					chaptFeeAttr.push(chaptFee);
					chaptUserNumAttr.push(userNum);
				}
				this.validateNow();
				draw();
		}
			
		public function draw():void {
				var per:Number;
				
   				var startX:int = canvas.x + canvas.width*0.2;
   				var startY:int = canvas.y + 20;
   				var width:int = canvas.width*0.6;
   				var height:int = canvas.height - 40;
				var nameLabel:Label;
				var propLabel:Label;
				var runOffRatioLabel:Label;
				for(var i:int = 0;i<chaptNameLabelAttr.length;i++){
					per = chaptPropAttr[i];
					drawLevel(per, i, chaptNameLabelAttr.length, startX, startY, width, height);
					
					nameLabel = chaptNameLabelAttr[i];
					nameLabel.x = canvas.x+40;
					nameLabel.y = startY + height / chaptNameLabelAttr.length * ( i  )*1.5 ;
					
					propLabel = chaptPropLabelAttr[i];
					propLabel.x =  canvas.width/2 - propLabel.width/2;
					propLabel.y = startY + height / chaptNameLabelAttr.length * ( i  )*1.5 ;
					
					runOffRatioLabel = runOffRatioAttr[i];
					runOffRatioLabel.x = canvas.width*0.8 + 5;
					runOffRatioLabel.y = startY + height / chaptNameLabelAttr.length * ( i  )*1.5 ;
				}
		}
			
		private function drawLevel(per:Number, levNum:int, totalNum:int, startX:int, startY:int, width:int, height:int):void {
   			var x:Number;
   			var y:Number;
   			var h:Number = height/totalNum;
   			var w:Number;
   			var colour:int;
   			if ( chaptFeeAttr[levNum] == 0 )colour = Colour.GRAY;
   			else colour = Colour.BLUE;
   			
   			if ( per > 0.1 ) {
   				w = width*per;
	   			x = startX + width*(1 - per)/2;
	   			y = startY + h*levNum*1.5 ;
	   			drawComp.graphics.lineStyle(2,colour,1);
	   			drawComp.graphics.beginFill(Colour.LIGHT_BLUE,0.5);
	   			drawComp.graphics.moveTo(x,y);
	   			drawComp.graphics.lineTo(x+w*0.15,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w*0.85,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y);
	   			drawComp.graphics.lineTo(x,y);
	   			drawComp.graphics.endFill();
   			}
   			else if ( per > 0.03 ){
   				w = width*per;
	   			x = startX + width*(1 - per)/2;
	   			y = startY + h*levNum*1.5 ;
	   			drawComp.graphics.lineStyle(2,colour,1);
	   			drawComp.graphics.beginFill(Colour.LIGHT_BLUE,0.5);
	   			drawComp.graphics.moveTo(x,y);
	   			drawComp.graphics.lineTo(x,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y);
	   			drawComp.graphics.lineTo(x,y);
	   			drawComp.graphics.endFill();
   			}
   			else {
   				per = 0.03;
   				w = width*per;
	   			x = startX + width*(1 - per)/2;
	   			y = startY + h*levNum*1.5 ;
	   			drawComp.graphics.lineStyle(2,colour,1);
	   			drawComp.graphics.beginFill(Colour.LIGHT_BLUE,0.5);
	   			drawComp.graphics.moveTo(x,y);
	   			drawComp.graphics.lineTo(x,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y+h*LEVEL_SCALE);
	   			drawComp.graphics.lineTo(x+w,y);
	   			drawComp.graphics.lineTo(x,y);
	   			drawComp.graphics.endFill();
   			}
   		}
   		
   		
   		
   		
   		
//   		private var drawBookTundish:DrawBookTundishWindow;
//   		private function openPackage():void {
//   			drawBookTundish = new DrawBookTundishWindow();
//   			  			
//   			PopUpManager.addPopUp(drawBookTundish,this,true);
//   			PopUpManager.centerPopUp(drawBookTundish);
//   			
//   			drawBookTundish.drawTundish(xmlData);
//   			drawBookTundish.removeChild(bt1);
//   			
//   		}
   		
   		
   		private function openPackage(e:Event):void {
   			buttonID = ((e.target) as Button).id;
   			if(buttonID == "bt1") n = N.text;
   			else if (buttonID == "bt2") n = "10";
   			var getBookPackage:HTTPService = new HTTPService();
			getBookPackage.resultFormat="e4x";
			getBookPackage.url="getBookPackage";
			
			var params:URLVariables = new URLVariables();
			params.n = this.n;
			params.tundishPath = this.tundishPath;
			params.bookID = this.bookID;
			params.packagePath = this.packagePath;
			
			getBookPackage.addEventListener(ResultEvent.RESULT,packaging);
//			getBookPackage.addEventListener(FaultEvent.FAULT,faultHandler);	
		
			getBookPackage.send(params);
   		}
   		
   		
   		var bookPackage:BookPackageWindow;
   		private function packaging(e:ResultEvent):void {
   			bookPackage = new BookPackageWindow();
   			var xmlData:XML = (XML)(e.message.body);
   			PopUpManager.addPopUp(bookPackage,this,true);
   			PopUpManager.centerPopUp(bookPackage);
   			bookPackage.init(xmlData);
   		}
   		
   		public function setTundishPath(str:String):void {
   			this.tundishPath = str+"/tundish.xml";
   			this.packagePath = str+"/bookPackage.xml";
   		}
   		
   		public function setBookID(str:String):void {
   			this.bookID = str;
   		}
   		
        private function closeHandle():void {
   			PopUpManager.removePopUp(this);
   		}
	 	]]>
	 </mx:Script>
	<mx:Canvas id="canvas" width="100%" height="90%">
		<mx:UIComponent id="drawComp" />
	</mx:Canvas> 
	<mx:Label x="50" y="432" text="输入需要打包的册数" width="96"/>
	<mx:TextInput id="N" x="177" y="428" width="81" restrict="0-9"/>
	<mx:Button id="bt1" x="286" y="428" label="分册打包" click="openPackage(event)"/>	
	<mx:Button id="bt2" x="533" y="428" label="默认分册" click="openPackage(event)"/>
	<mx:Button id="bt3" x="647" y="428" label="关闭" click="closeHandle()"/>
	
</mx:TitleWindow>
