<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="600" height="450"
	 showCloseButton="true" creationPolicy="all" close="closeHandle()">
	 <mx:Script>
	 	<![CDATA[
	 		import mx.events.IndexChangedEvent;
	 		import mx.controls.dataGridClasses.DataGridColumn;
	 		import mx.controls.DataGrid;
	 	import mx.controls.Button;
		import mx.charts.BubbleChart;
		import mx.controls.Label;
		import mx.collections.ArrayCollection;
		import mx.managers.PopUpManager;
		import SNADisplay.org.utils.Colour;
		import SNADisplay.component.DataGridWindow;
        import mx.core.UIComponent;
        import mx.controls.Alert;
        
        private var _xmlData:XML = new XML();
        private var selectedVolumnXML:XML = new XML();
        
        [Bindable]
        private var attrs:ArrayCollection = new ArrayCollection();
        [Bindable]
        private var columns:ArrayCollection = new ArrayCollection();
        private var datagridcolumns:Array = new Array();
        private var dataGrid:DataGrid;
        private var volumns:Array = new Array;
        private var volumnLabelArr:Array = new Array;
        private var chapterLabelArr:Array = new Array;
        private var chaptFeeAttr:Array = new Array;
        private var bookName:String;
        
  
        
        public function init(xmlData:XML):void {
        	_xmlData = xmlData;
        	var i:Number = 1;
        	var volumnLabel:Label;
        	bookName = new String(xmlData.attribute("bookName"));
        	for each(var volumnXML:XML in xmlData.child("volumn") ) {
        		volumnLabel = new Label;
        		volumnLabel.text = new String(volumnXML.attribute("name"));   
        		volumnLabel.setStyle("fontSize",12);
        		volumnLabelArr.push(volumnLabel);
        		canvas.addChild(volumnLabel);    		
        		volumns.push(volumnXML);
        	}
        	this.validateNow();
        	
        	draw(); 
        	     
        }
        
        public function draw():void {
        	var startX:Number = canvas.x + 20;
        	var startY:Number = canvas.y + 20;
        	var titleLabel:Label = new Label;
        	var Vgap:int = 30;
        	var Hgap:int = 60;
        	var width:Number = 0.5*canvas.width;
        	titleLabel.text = "《"+bookName+"》打包展示";
        	titleLabel.setStyle("fontSize",20);
        	titleLabel.x = startX-10;
        	titleLabel.y = startY-10;
        	canvas.addChild(titleLabel);
        	var tagLabel:Label = new Label;
        	tagLabel.text = "留存率";
        	tagLabel.setStyle("fontSize",12);
        	tagLabel.x = startX+3*Hgap+0.25*canvas.width-15;
        	tagLabel.y = startY;
        	canvas.addChild(tagLabel);
        	
        	var chaptNum:int = 1;
        	for (var i:int = 0;i<volumns.length;i++) {
        		
        		var volumnLabel:Label = new Label;
        		volumnLabel = volumnLabelArr[i];
        		volumnLabel.x = startX;
        		volumnLabel.y = startY + chaptNum*Vgap;
        		var volumnXML:XML = new XML;
        		volumnXML = volumns[i];
        		var j:int = 0;
        		for each(var chapterXML:XML in volumnXML.child("chapter")){
        			var chapterLabel:Label = new Label;
        			chapterLabel.text = new String(chapterXML.attribute("chaptName"));
        			chapterLabel.x = startX + Hgap;
        			chapterLabel.y = startY + chaptNum*Vgap;
        			chapterLabel.setStyle("fontSize",12);
        			canvas.addChild(chapterLabel);
        			var prop:Number = new Number(chapterXML.attribute("propotion"));
        			var userNum:Number = new Number(chapterXML.attribute("userNum"));
        			var per:Number = prop*100;
        			per = Number(per.toFixed(2));
        			var ratioLabel:Label = new Label;
        			ratioLabel.text = per+"%("+userNum+")";
        			ratioLabel.validateNow();
        			ratioLabel.x = startX+3*Hgap+0.25*canvas.width-25;
        			ratioLabel.y = startY + chaptNum*Vgap;
        			canvas.addChild(ratioLabel);
        			var fee:Number = new Number(chapterXML.attribute("chapterFee"));
        			drawPic(prop,chaptNum,startX+3*Hgap,startY,width,volumnLabel.height,fee);
        			chaptNum++;
        		}
        	}
        	this.validateNow();
        }
        
        private function drawPic(per:Number,levNum:int,startX:Number,startY:Number,width:int, height:int,fee:Number):void {
        	var x:Number;
   			var y:Number;
   			var h:Number = height;
   			var w:Number;
   			var colour:int;
   			var Vgap:int = 30;
        	var Hgap:int = 60;
   			if ( fee == 0 )colour = Colour.GREEN;
   			else colour = Colour.RED;
   			
   			if ( per > 0.1 ) {
   				w = width*per;
	   			x = startX + width*(1 - per)/2;
	   			y = startY + levNum*Vgap ;
	   			drawComp.graphics.lineStyle(2,colour,1);
	   			drawComp.graphics.beginFill(colour,0.5);
	   			drawComp.graphics.moveTo(x,y);
	   			drawComp.graphics.lineTo(x+w*0.15,y+h);
	   			drawComp.graphics.lineTo(x+w*0.85,y+h);
	   			drawComp.graphics.lineTo(x+w,y);
	   			drawComp.graphics.lineTo(x,y);
	   			drawComp.graphics.endFill();
   			}
   			else if ( per > 0.03 ){
   				w = width*per;
	   			x = startX + width*(1 - per)/2;
	   			y = startY + levNum*Vgap ;
	   			drawComp.graphics.lineStyle(2,colour,1);
	   			drawComp.graphics.beginFill(colour,0.5);
	   			drawComp.graphics.moveTo(x,y);
	   			drawComp.graphics.lineTo(x,y+h);
	   			drawComp.graphics.lineTo(x+w,y+h);
	   			drawComp.graphics.lineTo(x+w,y);
	   			drawComp.graphics.lineTo(x,y);
	   			drawComp.graphics.endFill();
   			}
   			else {
   				per = 0.03;
   				w = width*per;
	   			x = startX + width*(1 - per)/2;
	   			y = startY + levNum*Vgap ;
	   			drawComp.graphics.lineStyle(2,colour,1);
	   			drawComp.graphics.beginFill(colour,0.5);
	   			drawComp.graphics.moveTo(x,y);
	   			drawComp.graphics.lineTo(x,y+h);
	   			drawComp.graphics.lineTo(x+w,y+h);
	   			drawComp.graphics.lineTo(x+w,y);
	   			drawComp.graphics.lineTo(x,y);
	   			drawComp.graphics.endFill();
   			}
        }
        
        
        
        
        
        
        private function closeHandle():void {
        	PopUpManager.removePopUp(this);
        }
        
	 	]]>
	 </mx:Script>
	 
	 	
	
	 
	<mx:Canvas id="canvas" width="100%" height="90%">
		<!--<mx:ColumnChart id="columnChart" width="100%" height="100%" paddingLeft="5" paddingRight="5"
			 dataProvider="{attrs}" showDataTips="true" x="0" y="0">
			 
			
		</mx:ColumnChart>-->
		<mx:UIComponent id="drawComp" />
	</mx:Canvas>
	
		
</mx:TitleWindow>
